from django.shortcuts import render
from django.http import HttpResponse
from django.template import Context, loader
from django.db.models import Q
from models import Arrest_test
from itertools import chain
import datetime
import os
import re

def djangotest(request):
    now = datetime.datetime.now()
    html = "<html><body>It is now %s.</body></html>" % now
    return HttpResponse(html)

def usermanual(request):
    full_path = os.path.realpath(__file__)
    file_path = '%s/usermanual' % os.path.dirname(full_path) 
    with open(file_path) as file:
	html = file.readlines()
    return HttpResponse(html)    

def search(request):
    return render(request, 'SearchPage.html')

def result(request):

    entry = request.META["QUERY_STRING"]
    entry_list = entry.split("&")
    entry_dict = {}
    for item in entry_list:
	item_split = item.split("=")
	entry_dict[item_split[0]] = item_split[1]
    entry = entry_dict['searchbar']

    QuerySet = Arrest_test.objects.all()

    def filterByName(QuerySet, stringFilter):
        return QuerySet.filter(name__icontains=stringFilter)
    def filterByAgency(QuerySet, stringFilter):
        return QuerySet.filter(agency__icontains=stringFilter)
    def filterByCharge(QuerySet, stringFilter):
        return QuerySet.filter(charge__icontains=stringFilter)
    def filterByRace(QuerySet, stringFilter):
        return QuerySet.filter(race__icontains=stringFilter)
    def filterByAddress(QuerySet, stringFilter):
        return QuerySet.filter(address__icontains=stringFilter)
    def filterByOffenseCode(QuerySet, stringFilter):
        return QuerySet.filter(offense_code__icontains=stringFilter)
    def filterByReportingOfficer(QuerySet, stringFilter):
        return QuerySet.filter(reporting_officer__icontains=stringFilter)
    def filterByStreetAddress(QuerySet, stringFilter):
        return QuerySet.filter(street_address__icontains=stringFilter)
    def filterByCity(QuerySet, stringFilter):
        return QuerySet.filter(city__icontains=stringFilter)
    def filterByCounty(QuerySet, stringFilter):
        return QuerySet.filter(county__icontains=stringFilter)
    def filterByState(QuerySet, stringFilter):
        return QuerySet.filter(state__icontains=stringFilter)
    def filterBySex(QuerySet, stringFilter):
        return QuerySet.filter(sex__icontains=stringFilter)

    def filterByAge(QuerySet, intFilter):
        return QuerySet.filter(age=intFilter)
    def filterByZip(QuerySet, intFilter):
        return QuerySet.filter(zip=intFilter)

    def filterBySearchbar(QuerySet, stringFilter):
        stringFilter = stringFilter.replace("+", " ")
        QuerySet = QuerySet.filter(Q(name__icontains=stringFilter) | Q(agency__icontains=stringFilter) | Q(charge__icontains=stringFilter) | Q(race__icontains=stringFilter) | Q(address__icontains=stringFilter) | Q(offense_code__icontains=stringFilter) | Q(reporting_officer__icontains=stringFilter) | Q(street_address__icontains=stringFilter) | Q(city__icontains=stringFilter) | Q(state__icontains=stringFilter) | Q(sex__icontains=stringFilter))
        return QuerySet

    outputList = []
    for i in entry_dict.keys():
        if i == 'searchbar':
            if(entry_dict[i] != ''):
                QuerySet = filterBySearchbar(QuerySet, entry_dict[i])                
        if i == 'name':
            QuerySet = filterByName(QuerySet, entry_dict[i])
        if i == 'agency':
            QuerySet = filterByAgency(QuerySet, entry_dict[i])
        if i == 'charge':
            QuerySet = filterByCharge(QuerySet, entry_dict[i])
        if i == 'race':
            QuerySet = filterByRace(QuerySet, entry_dict[i])
        if i == 'address':
            QuerySet = filterByAddress(QuerySet, entry_dict[i])
        if i == 'offenseCode':
            QuerySet = filterByOffenseCode(QuerySet, entry_dict[i])
        if i == 'officerinvolved':
            QuerySet = filterByReportingOfficer(QuerySet, entry_dict[i])
        if i == 'streetaddress':
            QuerySet = filterByStreetAddress(QuerySet, entry_dict[i])
        if i == 'city':
            QuerySet = filterByCity(QuerySet, entry_dict[i])
        if i == 'county':
            QuerySet = filterByCounty(QuerySet, entry_dict[i])
        if i == 'state':
            QuerySet = filterByState(QuerySet, entry_dict[i])
        if i == 'sex':
            QuerySet = filterBySex(QuerySet, entry_dict[i])
        if i == 'zip':
            QuerySet = filterByZip(QuerySet, entry_dict[i])
        if i == 'age':
            QuerySet = filterByAge(QuerySet, entry_dict[i])

    for j in QuerySet:
        outputList.append(j)

    context = {'outputList': outputList}
    return render(request, 'ResultPage.html', context)

#def detail(request):
#    return render(request, RenderedResultString, '130.211.132.6/result')

